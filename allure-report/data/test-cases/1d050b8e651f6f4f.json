{
  "uid" : "1d050b8e651f6f4f",
  "name" : "test_login_002_log_in[case1]",
  "fullName" : "TestCase_002_yhz_old_regitster.test_yhz_001_login.TestYhz001Login#test_login_002_log_in",
  "historyId" : "43969b8e6721282ca24028a6f4aa9040",
  "time" : {
    "start" : 1606619868133,
    "stop" : 1606619868405,
    "duration" : 272
  },
  "description" : "\n            用例描述：验证码登录\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：验证码登录\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_yhz_001_login.TestYhz001Login object at 0x000001BCB07D3E08>\ncase = {'Comment': '', 'ID': 3004.0, 'advice': '为什么没有手机号都能没异常信息抛出？？', 'case_description': '登录--缺少手机号', ...}\n\n>   ???\n\nE:\\Python_auto_test\\Pytest_Api_automation\\TestCase_002_yhz_old_regitster\\test_yhz_001_login.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:360: in test_case_method\n    self.test.assert_common(response['code'], response['body'], expect, response['time_consuming'])\nCommon\\Assert.py:118: in assert_common\n    assert self.assert_in_text(res_body, res_expect)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000001BCB07CC148>\nbody = {'data': {'code': 0, 'file': '/var/www/tyhz/route/api/asyncExecution.php', 'line': 18, 'message': \"Class 'Route' not found\", ...}, 'msg': '系统出现异常', 'status': 400}\nexpected_msg = 'status\": 200'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)         # 将body序列化为JSON格式的str\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\nCommon\\Assert.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n            用例描述：验证码登录\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_yhz_001_login.TestYhz001Login object at 0x000001BCB07D3E08>\ncase = {'Comment': '', 'ID': 3004.0, 'advice': '为什么没有手机号都能没异常信息抛出？？', 'case_description': '登录--缺少手机号', ...}\n\n>   ???\n\nE:\\Python_auto_test\\Pytest_Api_automation\\TestCase_002_yhz_old_regitster\\test_yhz_001_login.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:360: in test_case_method\n    self.test.assert_common(response['code'], response['body'], expect, response['time_consuming'])\nCommon\\Assert.py:118: in assert_common\n    assert self.assert_in_text(res_body, res_expect)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000001BCB07CC148>\nbody = {'data': {'code': 0, 'file': '/var/www/tyhz/route/api/asyncExecution.php', 'line': 18, 'message': \"Class 'Route' not found\", ...}, 'msg': '系统出现异常', 'status': 400}\nexpected_msg = 'status\": 200'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)         # 将body序列化为JSON格式的str\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\nCommon\\Assert.py:65: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "da3f9fd1e55de1fd",
      "name" : "log",
      "source" : "da3f9fd1e55de1fd.txt",
      "type" : "text/plain",
      "size" : 124
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "雨花_老人登记_登录"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase_002_yhz_old_regitster"
  }, {
    "name" : "suite",
    "value" : "test_yhz_001_login"
  }, {
    "name" : "subSuite",
    "value" : "TestYhz001Login"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64VUMUD"
  }, {
    "name" : "thread",
    "value" : "13728-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase_002_yhz_old_regitster.test_yhz_001_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'ID': 3004.0, 'envir': 'yhz_test', '前置用例': '', 'module': 'yhz_002_log_in', 'case_description': '登录--缺少手机号', 'case_url': '/api/qhd/xapp/login', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '{\"phone\":\"\",\"captcha\":\"135246\"}', 'case_expect': 'status\": 200', 'Comment': '', 'advice': '为什么没有手机号都能没异常信息抛出？？'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "1d050b8e651f6f4f.json",
  "parameterValues" : [ "{'ID': 3004.0, 'envir': 'yhz_test', '前置用例': '', 'module': 'yhz_002_log_in', 'case_description': '登录--缺少手机号', 'case_url': '/api/qhd/xapp/login', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '{\"phone\":\"\",\"captcha\":\"135246\"}', 'case_expect': 'status\": 200', 'Comment': '', 'advice': '为什么没有手机号都能没异常信息抛出？？'}" ]
}