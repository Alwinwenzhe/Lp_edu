{
  "uid" : "ad98401464a031c",
  "name" : "test_biotope_serve_002_notice_newest[case0]",
  "fullName" : "TestCase_001_ysy.test_ysy_003_biotope_serve.TestYsy003BiotopeServe#test_biotope_serve_002_notice_newest",
  "historyId" : "4cc4d39e70d74d351882e82f8f7d1ce7",
  "time" : {
    "start" : 1605834743837,
    "stop" : 1605834743837,
    "duration" : 0
  },
  "description" : "\n            用例描述：首页刷新--广播\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：首页刷新--广播\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "UnboundLocalError: local variable 'cursor' referenced before assignment",
  "statusTrace" : "self = <test_ysy_003_biotope_serve.TestYsy003BiotopeServe object at 0x00000186ED4804C8>\ncase = {'Comment': '', 'ID': '0080', 'advice': '', 'case_description': '小区广播', ...}\n\n    @allure.step(\"首页广播\")\n    @pytest.mark.parametrize('case', excel.get_excel_data('biotope_serve_001_notice_newest'))\n    def test_biotope_serve_002_notice_newest(self, case):\n        \"\"\"\n            用例描述：首页刷新--广播\n        \"\"\"\n>       self.new.test_case_method(case, 'get')\n\nTestCase_001_ysy\\test_ysy_003_biotope_serve.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\nCommon\\new_tool_a.py:50: in param_get_deal\n    expect = self.multiple_data(envir,expect)\nCommon\\new_tool_a.py:118: in multiple_data\n    result = self.single_sql_data_deal(envir, i)\nCommon\\new_tool_a.py:183: in single_sql_data_deal\n    val = oper_s.execute_sql(val)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.operate_sql_al.OperateSqlAl object at 0x00000186ED642248>\nsql_str = \"SELECT IFNULL(pn.notice_title, 'query is error') FROM pmc_notice pn WHERE (pn.is_valid = 'Y' AND pn.is_top = 'Y' AND pn.id_family_biotope = '7ec79a4d61df419c82e51c5b858bdc7e') GROUP BY pn.create_time DESC LIMIT 0, 1\"\n\n    def execute_sql(self, sql_str):\n        try:\n            db = pymysql.connect(host=self.dbhost, port=self.dbport, user=self.db_user, passwd=self.pwd, db=self.dbname,\n                                 charset='utf8')\n            cursor = db.cursor()  # 创建一个游标\n            cursor.execute(sql_str)\n            data = cursor.fetchone()\n            data = self.bytes_to_str(data[0])\n            return data\n        except Exception:\n            print('\\033[1;33m\"sql执行异常，请检查\"\\033[3;31m')\n        finally:\n>           cursor.close()\nE           UnboundLocalError: local variable 'cursor' referenced before assignment\n\nCommon\\operate_sql_al.py:71: UnboundLocalError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n            用例描述：首页刷新--广播\n        ",
    "status" : "broken",
    "statusMessage" : "UnboundLocalError: local variable 'cursor' referenced before assignment",
    "statusTrace" : "self = <test_ysy_003_biotope_serve.TestYsy003BiotopeServe object at 0x00000186ED4804C8>\ncase = {'Comment': '', 'ID': '0080', 'advice': '', 'case_description': '小区广播', ...}\n\n    @allure.step(\"首页广播\")\n    @pytest.mark.parametrize('case', excel.get_excel_data('biotope_serve_001_notice_newest'))\n    def test_biotope_serve_002_notice_newest(self, case):\n        \"\"\"\n            用例描述：首页刷新--广播\n        \"\"\"\n>       self.new.test_case_method(case, 'get')\n\nTestCase_001_ysy\\test_ysy_003_biotope_serve.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\nCommon\\new_tool_a.py:50: in param_get_deal\n    expect = self.multiple_data(envir,expect)\nCommon\\new_tool_a.py:118: in multiple_data\n    result = self.single_sql_data_deal(envir, i)\nCommon\\new_tool_a.py:183: in single_sql_data_deal\n    val = oper_s.execute_sql(val)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.operate_sql_al.OperateSqlAl object at 0x00000186ED642248>\nsql_str = \"SELECT IFNULL(pn.notice_title, 'query is error') FROM pmc_notice pn WHERE (pn.is_valid = 'Y' AND pn.is_top = 'Y' AND pn.id_family_biotope = '7ec79a4d61df419c82e51c5b858bdc7e') GROUP BY pn.create_time DESC LIMIT 0, 1\"\n\n    def execute_sql(self, sql_str):\n        try:\n            db = pymysql.connect(host=self.dbhost, port=self.dbport, user=self.db_user, passwd=self.pwd, db=self.dbname,\n                                 charset='utf8')\n            cursor = db.cursor()  # 创建一个游标\n            cursor.execute(sql_str)\n            data = cursor.fetchone()\n            data = self.bytes_to_str(data[0])\n            return data\n        except Exception:\n            print('\\033[1;33m\"sql执行异常，请检查\"\\033[3;31m')\n        finally:\n>           cursor.close()\nE           UnboundLocalError: local variable 'cursor' referenced before assignment\n\nCommon\\operate_sql_al.py:71: UnboundLocalError",
    "steps" : [ {
      "name" : "首页广播",
      "time" : {
        "start" : 1605834743837,
        "stop" : 1605834743837,
        "duration" : 0
      },
      "status" : "broken",
      "statusMessage" : "UnboundLocalError: local variable 'cursor' referenced before assignment\n",
      "statusTrace" : "  File \"E:\\programs\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\Api_automation\\TestCase_001_ysy\\test_ysy_003_biotope_serve.py\", line 31, in test_biotope_serve_002_notice_newest\n    self.new.test_case_method(case, 'get')\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 357, in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 50, in param_get_deal\n    expect = self.multiple_data(envir,expect)\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 118, in multiple_data\n    result = self.single_sql_data_deal(envir, i)\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 183, in single_sql_data_deal\n    val = oper_s.execute_sql(val)\n  File \"E:\\python_code\\Api_automation\\Common\\operate_sql_al.py\", line 71, in execute_sql\n    cursor.close()\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "case",
        "value" : "{'ID': '0080', 'envir': 'ysy_release', '前置用例': '', 'module': 'biotope_serve_001_notice_newest', 'case_description': '小区广播', 'case_url': '/api/v1/pmc/notice/newest?biotopeId=j::biotopeId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pn.notice_title, 'query is error') FROM pmc_notice pn WHERE (pn.is_valid = 'Y' AND pn.is_top = 'Y' AND pn.id_family_biotope = '{0[0]}') GROUP BY pn.create_time DESC LIMIT 0, 1format(j::biotopeId);\", 'Comment': '', 'advice': ''}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "物业首页"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "一生约--物业板块"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase_001_ysy"
  }, {
    "name" : "suite",
    "value" : "test_ysy_003_biotope_serve"
  }, {
    "name" : "subSuite",
    "value" : "TestYsy003BiotopeServe"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64VUMUD"
  }, {
    "name" : "thread",
    "value" : "24616-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase_001_ysy.test_ysy_003_biotope_serve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'ID': '0080', 'envir': 'ysy_release', '前置用例': '', 'module': 'biotope_serve_001_notice_newest', 'case_description': '小区广播', 'case_url': '/api/v1/pmc/notice/newest?biotopeId=j::biotopeId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pn.notice_title, 'query is error') FROM pmc_notice pn WHERE (pn.is_valid = 'Y' AND pn.is_top = 'Y' AND pn.id_family_biotope = '{0[0]}') GROUP BY pn.create_time DESC LIMIT 0, 1format(j::biotopeId);\", 'Comment': '', 'advice': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ad98401464a031c.json",
  "parameterValues" : [ "{'ID': '0080', 'envir': 'ysy_release', '前置用例': '', 'module': 'biotope_serve_001_notice_newest', 'case_description': '小区广播', 'case_url': '/api/v1/pmc/notice/newest?biotopeId=j::biotopeId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pn.notice_title, 'query is error') FROM pmc_notice pn WHERE (pn.is_valid = 'Y' AND pn.is_top = 'Y' AND pn.id_family_biotope = '{0[0]}') GROUP BY pn.create_time DESC LIMIT 0, 1format(j::biotopeId);\", 'Comment': '', 'advice': ''}" ]
}