{
  "uid" : "38d7a79bba446ab6",
  "name" : "test_login_002_log_in[case3]",
  "fullName" : "TestCase_001_ysy.test_ysy_001_login.TestYsy001Login#test_login_002_log_in",
  "historyId" : "11e94e95aa48a15a86c9fc55bf6c5347",
  "time" : {
    "start" : 1606619650588,
    "stop" : 1606619650909,
    "duration" : 321
  },
  "description" : "\n            用例描述：验证码登录\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：验证码登录\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_ysy_001_login.TestYsy001Login object at 0x000001BCB07A63C8>\ncase = {'Comment': '', 'ID': '0008', 'advice': '', 'case_description': '登陆--正确验证码', ...}\n\n>   ???\n\nE:\\Python_auto_test\\Pytest_Api_automation\\TestCase_001_ysy\\test_ysy_001_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:360: in test_case_method\n    self.test.assert_common(response['code'], response['body'], expect, response['time_consuming'])\nCommon\\Assert.py:118: in assert_common\n    assert self.assert_in_text(res_body, res_expect)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000001BCB076A708>\nbody = {'code': 2007, 'msg': '验证码已过期，请重新获取', 'ts': 1606619650404}\nexpected_msg = 'accessToken'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)         # 将body序列化为JSON格式的str\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\nCommon\\Assert.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n            用例描述：验证码登录\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_ysy_001_login.TestYsy001Login object at 0x000001BCB07A63C8>\ncase = {'Comment': '', 'ID': '0008', 'advice': '', 'case_description': '登陆--正确验证码', ...}\n\n>   ???\n\nE:\\Python_auto_test\\Pytest_Api_automation\\TestCase_001_ysy\\test_ysy_001_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:360: in test_case_method\n    self.test.assert_common(response['code'], response['body'], expect, response['time_consuming'])\nCommon\\Assert.py:118: in assert_common\n    assert self.assert_in_text(res_body, res_expect)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000001BCB076A708>\nbody = {'code': 2007, 'msg': '验证码已过期，请重新获取', 'ts': 1606619650404}\nexpected_msg = 'accessToken'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)         # 将body序列化为JSON格式的str\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\nCommon\\Assert.py:65: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "121110fb330a6ffa",
      "name" : "log",
      "source" : "121110fb330a6ffa.txt",
      "type" : "text/plain",
      "size" : 123
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "feature",
    "value" : "一生约--登录"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase_001_ysy"
  }, {
    "name" : "suite",
    "value" : "test_ysy_001_login"
  }, {
    "name" : "subSuite",
    "value" : "TestYsy001Login"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64VUMUD"
  }, {
    "name" : "thread",
    "value" : "13728-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase_001_ysy.test_ysy_001_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'ID': '0008', 'envir': 'ysy_release', '前置用例': '', 'module': 'login_02_log_in', 'case_description': '登陆--正确验证码', 'case_url': '/api/v1/user/login', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': 'data/userInfo/userId,data/accessToken,data/ssoToken,data/userHouse/familyHouseId,data/userHouse/familyBiotopeId', 'case_preset': '', 'case_params': '{\"mobile\":\"c::ysy_user\",\"verifyCode\":\"j::verifyCode\"}', 'case_expect': 'accessToken', 'Comment': '', 'advice': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "38d7a79bba446ab6.json",
  "parameterValues" : [ "{'ID': '0008', 'envir': 'ysy_release', '前置用例': '', 'module': 'login_02_log_in', 'case_description': '登陆--正确验证码', 'case_url': '/api/v1/user/login', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': 'data/userInfo/userId,data/accessToken,data/ssoToken,data/userHouse/familyHouseId,data/userHouse/familyBiotopeId', 'case_preset': '', 'case_params': '{\"mobile\":\"c::ysy_user\",\"verifyCode\":\"j::verifyCode\"}', 'case_expect': 'accessToken', 'Comment': '', 'advice': ''}" ]
}