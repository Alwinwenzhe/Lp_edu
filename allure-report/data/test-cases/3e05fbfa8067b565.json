{
  "uid" : "3e05fbfa8067b565",
  "name" : "test_repair_003_cur_Repair_List[case2]",
  "fullName" : "TestCase_001_ysy.test_ysy_008_repair.TestYsy007Myself#test_repair_003_cur_Repair_List",
  "historyId" : "a518e8c31c5d53384669709c4a30a85c",
  "time" : {
    "start" : 1605874340324,
    "stop" : 1605874340580,
    "duration" : 256
  },
  "description" : "\n            用例描述：报修历史记录\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：报修历史记录\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "self = <test_ysy_008_repair.TestYsy007Myself object at 0x0000011EAD010D08>\ncase = {'Comment': '报修类型id为非必填项', 'ID': '0027', 'advice': '', 'case_description': '报修列表--并非历史报修---缺少报修类型', ...}\n\n    @allure.step(\"报修历史记录\")\n    @pytest.mark.parametrize('case', excel.get_excel_data('repair_003_cur_Repair_List'))\n    def test_repair_003_cur_Repair_List(self, case):\n        \"\"\"\n            用例描述：报修历史记录\n        \"\"\"\n>       self.new.test_case_method(case, 'get')\n\nTestCase_001_ysy\\test_ysy_008_repair.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.new_tool_a.New_Tool_A object at 0x0000011EACF9E948>\ncase = {'Comment': '报修类型id为非必填项', 'ID': '0027', 'advice': '', 'case_description': '报修列表--并非历史报修---缺少报修类型', ...}\n\n    def param_get_deal(self,case):\n        '''\n        case参数获取并进行相关处理\n        :param case:\n        :return:\n        '''\n        envir = case['envir']\n        expect = case['case_expect']\n        if expect:\n            expect = self.multiple_data(envir,expect)\n        preset_data = case['case_preset']\n        # postposition_data = case['case_postposition']\n        # if postposition_data:\n        #     self.multiple_data(envir,postposition_data)\n        urls = case['case_url']\n        global_var = case['case_global_var']\n        if preset_data:\n            self.multiple_data(envir, preset_data)  #返回值都写进json了\n        req_url = self.choose_envir(envir)\n        api_url = req_url + urls\n        api_url = self.multiple_data(envir, api_url)[0]\n        # api_url = self.multiple_data(envir, api_url)[0]  # 这里返回的url不该是list\n        if case['case_header']:  # 判断header是否为空\n            headers = json.loads(case['case_header'])\n            headers = self.multiple_data(envir,headers)\n        else:\n            headers = None\n        params = case['case_params']\n        params = self.multiple_data(envir, params)  # params格式有问题\n>       return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\nE       IndexError: list index out of range\n\nCommon\\new_tool_a.py:70: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n            用例描述：报修历史记录\n        ",
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range",
    "statusTrace" : "self = <test_ysy_008_repair.TestYsy007Myself object at 0x0000011EAD010D08>\ncase = {'Comment': '报修类型id为非必填项', 'ID': '0027', 'advice': '', 'case_description': '报修列表--并非历史报修---缺少报修类型', ...}\n\n    @allure.step(\"报修历史记录\")\n    @pytest.mark.parametrize('case', excel.get_excel_data('repair_003_cur_Repair_List'))\n    def test_repair_003_cur_Repair_List(self, case):\n        \"\"\"\n            用例描述：报修历史记录\n        \"\"\"\n>       self.new.test_case_method(case, 'get')\n\nTestCase_001_ysy\\test_ysy_008_repair.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.new_tool_a.New_Tool_A object at 0x0000011EACF9E948>\ncase = {'Comment': '报修类型id为非必填项', 'ID': '0027', 'advice': '', 'case_description': '报修列表--并非历史报修---缺少报修类型', ...}\n\n    def param_get_deal(self,case):\n        '''\n        case参数获取并进行相关处理\n        :param case:\n        :return:\n        '''\n        envir = case['envir']\n        expect = case['case_expect']\n        if expect:\n            expect = self.multiple_data(envir,expect)\n        preset_data = case['case_preset']\n        # postposition_data = case['case_postposition']\n        # if postposition_data:\n        #     self.multiple_data(envir,postposition_data)\n        urls = case['case_url']\n        global_var = case['case_global_var']\n        if preset_data:\n            self.multiple_data(envir, preset_data)  #返回值都写进json了\n        req_url = self.choose_envir(envir)\n        api_url = req_url + urls\n        api_url = self.multiple_data(envir, api_url)[0]\n        # api_url = self.multiple_data(envir, api_url)[0]  # 这里返回的url不该是list\n        if case['case_header']:  # 判断header是否为空\n            headers = json.loads(case['case_header'])\n            headers = self.multiple_data(envir,headers)\n        else:\n            headers = None\n        params = case['case_params']\n        params = self.multiple_data(envir, params)  # params格式有问题\n>       return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\nE       IndexError: list index out of range\n\nCommon\\new_tool_a.py:70: IndexError",
    "steps" : [ {
      "name" : "报修历史记录",
      "time" : {
        "start" : 1605874340324,
        "stop" : 1605874340580,
        "duration" : 256
      },
      "status" : "broken",
      "statusMessage" : "IndexError: list index out of range\n",
      "statusTrace" : "  File \"E:\\programs\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_code\\Api_automation\\TestCase_001_ysy\\test_ysy_008_repair.py\", line 35, in test_repair_003_cur_Repair_List\n    self.new.test_case_method(case, 'get')\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 357, in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n  File \"E:\\python_code\\Api_automation\\Common\\new_tool_a.py\", line 70, in param_get_deal\n    return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "case",
        "value" : "{'ID': '0027', 'envir': 'ysy_release', '前置用例': '', 'module': 'repair_003_cur_Repair_List', 'case_description': '报修列表--并非历史报修---缺少报修类型', 'case_url': '/api/v1/area/repair/curRepairList?userId=j::userId&houseId=j::familyHouseId&repairTypeId=', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\",\"accessToken\":\"j::accessToken\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(r.id,'Get data error') from repair r WHERE r.repair_source = '1' AND r.id_user='{0[0]}' AND r.status IN (1,2,3,4,7,8,9,10) ORDER BY r.create_time DESC LIMIT 1format(j::userId);\", 'Comment': '报修类型id为非必填项', 'advice': ''}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "小区服务--报事报修"
  }, {
    "name" : "story",
    "value" : "报事报修"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase_001_ysy"
  }, {
    "name" : "suite",
    "value" : "test_ysy_008_repair"
  }, {
    "name" : "subSuite",
    "value" : "TestYsy007Myself"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64VUMUD"
  }, {
    "name" : "thread",
    "value" : "12708-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase_001_ysy.test_ysy_008_repair"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'ID': '0027', 'envir': 'ysy_release', '前置用例': '', 'module': 'repair_003_cur_Repair_List', 'case_description': '报修列表--并非历史报修---缺少报修类型', 'case_url': '/api/v1/area/repair/curRepairList?userId=j::userId&houseId=j::familyHouseId&repairTypeId=', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\",\"accessToken\":\"j::accessToken\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(r.id,'Get data error') from repair r WHERE r.repair_source = '1' AND r.id_user='{0[0]}' AND r.status IN (1,2,3,4,7,8,9,10) ORDER BY r.create_time DESC LIMIT 1format(j::userId);\", 'Comment': '报修类型id为非必填项', 'advice': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "3e05fbfa8067b565.json",
  "parameterValues" : [ "{'ID': '0027', 'envir': 'ysy_release', '前置用例': '', 'module': 'repair_003_cur_Repair_List', 'case_description': '报修列表--并非历史报修---缺少报修类型', 'case_url': '/api/v1/area/repair/curRepairList?userId=j::userId&houseId=j::familyHouseId&repairTypeId=', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\",\"accessToken\":\"j::accessToken\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(r.id,'Get data error') from repair r WHERE r.repair_source = '1' AND r.id_user='{0[0]}' AND r.status IN (1,2,3,4,7,8,9,10) ORDER BY r.create_time DESC LIMIT 1format(j::userId);\", 'Comment': '报修类型id为非必填项', 'advice': ''}" ]
}