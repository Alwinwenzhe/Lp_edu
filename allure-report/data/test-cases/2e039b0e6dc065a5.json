{
  "uid" : "2e039b0e6dc065a5",
  "name" : "test_ysy_pro_010_get_Repair_List[case0]",
  "fullName" : "TestCase_004_ysy_property.test_ysy_pro_003_my_task.TestYsyPro002MyTask#test_ysy_pro_010_get_Repair_List",
  "historyId" : "d91e3af56a03d95c99e0b50bcc8078a6",
  "time" : {
    "start" : 1605859635553,
    "stop" : 1605859636082,
    "duration" : 529
  },
  "description" : "\n            用例描述：物业app密码登录\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：物业app密码登录\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "self = <test_ysy_pro_003_my_task.TestYsyPro002MyTask object at 0x0000028FC49B6BC8>\ncase = {'Comment': '', 'ID': '2053', 'advice': '', 'case_description': '首页-智慧门禁--人像管理--人像列表', ...}\n\n    @allure.step('专区报修列表')\n    @pytest.mark.parametrize('case', excel.get_excel_data('ysy_pro_010_get_Repair_List'))\n    def test_ysy_pro_010_get_Repair_List(self, case):\n        \"\"\"\n            用例描述：物业app密码登录\n        \"\"\"\n>       self.new.test_case_method(case, 'post')\n\nTestCase_004_ysy_property\\test_ysy_pro_003_my_task.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.new_tool_a.New_Tool_A object at 0x0000028FC4BFE1C8>\ncase = {'Comment': '', 'ID': '2053', 'advice': '', 'case_description': '首页-智慧门禁--人像管理--人像列表', ...}\n\n    def param_get_deal(self,case):\n        '''\n        case参数获取并进行相关处理\n        :param case:\n        :return:\n        '''\n        envir = case['envir']\n        expect = case['case_expect']\n        if expect:\n            expect = self.multiple_data(envir,expect)\n        preset_data = case['case_preset']\n        # postposition_data = case['case_postposition']\n        # if postposition_data:\n        #     self.multiple_data(envir,postposition_data)\n        urls = case['case_url']\n        global_var = case['case_global_var']\n        if preset_data:\n            self.multiple_data(envir, preset_data)  #返回值都写进json了\n        req_url = self.choose_envir(envir)\n        api_url = req_url + urls\n        api_url = self.multiple_data(envir, api_url)[0]\n        # api_url = self.multiple_data(envir, api_url)[0]  # 这里返回的url不该是list\n        if case['case_header']:  # 判断header是否为空\n            headers = json.loads(case['case_header'])\n            headers = self.multiple_data(envir,headers)\n        else:\n            headers = None\n        params = case['case_params']\n        params = self.multiple_data(envir, params)  # params格式有问题\n>       return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\nE       IndexError: list index out of range\n\nCommon\\new_tool_a.py:70: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n            用例描述：物业app密码登录\n        ",
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range",
    "statusTrace" : "self = <test_ysy_pro_003_my_task.TestYsyPro002MyTask object at 0x0000028FC49B6BC8>\ncase = {'Comment': '', 'ID': '2053', 'advice': '', 'case_description': '首页-智慧门禁--人像管理--人像列表', ...}\n\n    @allure.step('专区报修列表')\n    @pytest.mark.parametrize('case', excel.get_excel_data('ysy_pro_010_get_Repair_List'))\n    def test_ysy_pro_010_get_Repair_List(self, case):\n        \"\"\"\n            用例描述：物业app密码登录\n        \"\"\"\n>       self.new.test_case_method(case, 'post')\n\nTestCase_004_ysy_property\\test_ysy_pro_003_my_task.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\new_tool_a.py:357: in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.new_tool_a.New_Tool_A object at 0x0000028FC4BFE1C8>\ncase = {'Comment': '', 'ID': '2053', 'advice': '', 'case_description': '首页-智慧门禁--人像管理--人像列表', ...}\n\n    def param_get_deal(self,case):\n        '''\n        case参数获取并进行相关处理\n        :param case:\n        :return:\n        '''\n        envir = case['envir']\n        expect = case['case_expect']\n        if expect:\n            expect = self.multiple_data(envir,expect)\n        preset_data = case['case_preset']\n        # postposition_data = case['case_postposition']\n        # if postposition_data:\n        #     self.multiple_data(envir,postposition_data)\n        urls = case['case_url']\n        global_var = case['case_global_var']\n        if preset_data:\n            self.multiple_data(envir, preset_data)  #返回值都写进json了\n        req_url = self.choose_envir(envir)\n        api_url = req_url + urls\n        api_url = self.multiple_data(envir, api_url)[0]\n        # api_url = self.multiple_data(envir, api_url)[0]  # 这里返回的url不该是list\n        if case['case_header']:  # 判断header是否为空\n            headers = json.loads(case['case_header'])\n            headers = self.multiple_data(envir,headers)\n        else:\n            headers = None\n        params = case['case_params']\n        params = self.multiple_data(envir, params)  # params格式有问题\n>       return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\nE       IndexError: list index out of range\n\nCommon\\new_tool_a.py:70: IndexError",
    "steps" : [ {
      "name" : "专区报修列表",
      "time" : {
        "start" : 1605859635554,
        "stop" : 1605859636082,
        "duration" : 528
      },
      "status" : "broken",
      "statusMessage" : "IndexError: list index out of range\n",
      "statusTrace" : "  File \"E:\\programs\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\Python_auto_test\\Pytest_Api_automation\\TestCase_004_ysy_property\\test_ysy_pro_003_my_task.py\", line 27, in test_ysy_pro_010_get_Repair_List\n    self.new.test_case_method(case, 'post')\n  File \"E:\\Python_auto_test\\Pytest_Api_automation\\Common\\new_tool_a.py\", line 357, in test_case_method\n    expect, api_url, headers, params, global_var = self.param_get_deal(case)\n  File \"E:\\Python_auto_test\\Pytest_Api_automation\\Common\\new_tool_a.py\", line 70, in param_get_deal\n    return expect[0], api_url, headers, params, global_var          # 只验证第一个expect值即可\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "case",
        "value" : "{'ID': '2053', 'envir': 'ysy_pro_release', '前置用例': '', 'module': 'ysy_pro_010_get_Repair_List', 'case_description': '首页-智慧门禁--人像管理--人像列表', 'case_url': '/api/v1/face/getFaceList?houseId=j::familyHouseId&userId=j::userId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"accessToken\":\"j::accessToken\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pff.id, 'Get data error')FROM pm_user_facial_feature pff WHERE pff.family_house_id={0[0]} AND pff.is_valid='Y' LIMIT 1format(j::familyHouseId);\", 'Comment': '', 'advice': ''}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "一生约物业app"
  }, {
    "name" : "story",
    "value" : "首页--任务列表"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase_004_ysy_property"
  }, {
    "name" : "suite",
    "value" : "test_ysy_pro_003_my_task"
  }, {
    "name" : "subSuite",
    "value" : "TestYsyPro002MyTask"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64VUMUD"
  }, {
    "name" : "thread",
    "value" : "40812-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase_004_ysy_property.test_ysy_pro_003_my_task"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'ID': '2053', 'envir': 'ysy_pro_release', '前置用例': '', 'module': 'ysy_pro_010_get_Repair_List', 'case_description': '首页-智慧门禁--人像管理--人像列表', 'case_url': '/api/v1/face/getFaceList?houseId=j::familyHouseId&userId=j::userId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"accessToken\":\"j::accessToken\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pff.id, 'Get data error')FROM pm_user_facial_feature pff WHERE pff.family_house_id={0[0]} AND pff.is_valid='Y' LIMIT 1format(j::familyHouseId);\", 'Comment': '', 'advice': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2e039b0e6dc065a5.json",
  "parameterValues" : [ "{'ID': '2053', 'envir': 'ysy_pro_release', '前置用例': '', 'module': 'ysy_pro_010_get_Repair_List', 'case_description': '首页-智慧门禁--人像管理--人像列表', 'case_url': '/api/v1/face/getFaceList?houseId=j::familyHouseId&userId=j::userId', 'case_header': '{\"Content-Type\":\"application/json; charset=UTF-8\",\"accessToken\":\"j::accessToken\",\"enterpriseId\":\"1122c78ae5d140a5acbaa9e75c8b8994\"}', 'case_global_var': '', 'case_preset': '', 'case_params': '', 'case_expect': \"SELECT IFNULL(pff.id, 'Get data error')FROM pm_user_facial_feature pff WHERE pff.family_house_id={0[0]} AND pff.is_valid='Y' LIMIT 1format(j::familyHouseId);\", 'Comment': '', 'advice': ''}" ]
}